{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/uploadFile.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/notes/NoteAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/NothingSeleted.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEtries.jsx","components/journal/Sidebar.jsx","components/journal/JouernalScreen.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.jsx","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","getDocs","query","collection","noteSnap","note","forEach","snapHijo","push","id","data","uploadFile","file","formData","FormData","append","fetch","method","body","resp","ok","cloudResp","json","addNewNote","activeNote","startLoadingNotes","dispatch","notes","setNotes","startSaveNote","getState","auth","url","noteToFirebase","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","startLoginWithEmailPassword","password","email","getAuth","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","startLogout","signOut","logout","useForm","initialState","useState","value","setValue","reset","newState","hadleInputChange","target","name","NoteAppBar","useDispatch","active","useSelector","state","fecha","moment","date","format","className","style","display","onChange","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValue","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","deleteDoc","startDelete","NothingSeleted","JournalEntry","noteDate","thisEntry","backgroundSize","backgroundImage","JournalEtries","map","Sidebar","newNote","Date","getTime","addDoc","JouernalScreen","LoginScreen","loading","ui","handleInputChange","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","inputValue","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","currentUser","message","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","loggedIn","Component","rest","props","PublicRoute","AppRouter","checkin","setCheckin","setLoggedIn","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.078d6c03.chunk.js","sourcesContent":["import 'firebase/firestore';\nimport 'firebase/auth';\n//Importacion de Funciones\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { GoogleAuthProvider } from 'firebase/auth';\n\n//Configuracion Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD5Nu1wXRXYoa84l1YK9YZrLtn7gbTOjJs\",\n    authDomain: \"journal-app-react-20aea.firebaseapp.com\",\n    projectId: \"journal-app-react-20aea\",\n    storageBucket: \"journal-app-react-20aea.appspot.com\",\n    messagingSenderId: \"248623006180\",\n    appId: \"1:248623006180:web:0a12f266c389fceb2147f1\"\n};\n\n//Inicializar firebase\nconst app = initializeApp(firebaseConfig);\n\n//Referencia a la base de datos\nconst db = getFirestore();\n\n//Para autenticar con google\nconst googleAuthProvider = new GoogleAuthProvider();\n\nexport{\n    db,\n    googleAuthProvider\n}\n\n","\n\n\n\nexport const types = {\n    \n    //Auth\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    //Ui\n    uiSetError: '[Ui] Set Error',\n    uiRemoveError: '[Ui] Remove Error',\n    uiStartLoading: '[Ui] Start Loading',\n    uiFinishLoading: '[Ui] Finish Loading',\n\n    //Notes\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load note',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning'  \n}","import { types } from \"../types/types\";\n\n\n//Actions Ui\n\n\nexport const setError = (err) => ({\n\n    type: types.uiSetError,\n    payload: err\n})\n\n\nexport const removeError = () => ({\n\n    type: types.uiRemoveError\n})\n\n\nexport const startLoading = () => ({\n\n    type: types.uiStartLoading\n})\n\n\nexport const finishLoading = () => ({\n\n    type: types.uiFinishLoading\n})","import { collection, getDocs, query } from \"@firebase/firestore\"\nimport { db } from \"../firebase/firebase-config\"\n\n\n\n\nexport const loadNotes = async(uid) => {\n\n    const noteSnap =  await getDocs(query(collection(db, `${ uid }/journal/notes`)));\n\n    const note = [];\n\n\n    noteSnap.forEach(snapHijo => {\n        note.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n\n\n\n    return note;\n}","\n\n\nexport const uploadFile = async(file) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dpi1phz6t/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-joarnal');\n    formData.append('file', file);\n\n\n    try {\n        \n        const resp = await fetch(cloudUrl, {\n            method: 'POST',\n            body: formData\n        })        \n\n        if (resp.ok) {\n            \n            const cloudResp = resp.json();\n            return cloudResp\n\n        } else {\n            throw await resp.json();\n        }\n\n\n    } catch (error) {\n        throw error;\n    }\n\n}\n","import { addDoc, collection, deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { uploadFile } from \"../helpers/uploadFile\";\nimport { types } from \"../types/types\";\n\n\n\n\n//Las tareas Asincronas empiezan con start\n\nexport const startNewNote = () => {\n\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote)\n\n        dispatch(activeNote(doc.id, newNote))\n\n        dispatch(addNewNote(doc.id, newNote))\n    }\n\n}\n\n\nexport const addNewNote = (id, note) => ( {\n    type: types.notesAddNew,\n    payload:{\n        id, ...note\n    }\n})\n\n\nexport const activeNote = (id, note) => ({\n\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n\n})\n\n\nexport const startLoadingNotes = (uid) => {\n    return async(dispatch) => {\n        \n        const notes = await loadNotes(uid)\n        \n        dispatch( setNotes(notes) )\n    }\n}\n\n\nexport const setNotes = (notes) => ({\n    type: types.notesLoad,\n    payload: notes \n\n})\n\n\n\nexport const startSaveNote = (note) => {\n    return async (dispatch, getState) =>{\n        \n        const { uid } = getState().auth;\n\n        //Borro los campos que estan en undefined\n        if (!note.url) {\n            delete note.url\n        }\n\n        //Para no modificar el (note) que viene por argumento  \n        const noteToFirebase = {...note};\n        delete noteToFirebase.id;\n\n        const noteRef = doc(db, `${uid}/journal/notes/${note.id}`);\n        await updateDoc(noteRef, noteToFirebase);\n\n        dispatch(refreshNote(note.id, noteToFirebase))\n\n        Swal.fire('Saved', note.title, 'success')\n    }\n\n}\n\n//Para refrescar la nota y se cargue en en la barra laterla\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: {\n        id, \n        //Para asegurarme que venga con el id\n        note: {\n            id,\n            ...note\n        }\n    }\n})\n\n\n\nexport const startUploading = (file) => {\n    return async(dispatch, getState) => {\n        \n        const { active: activeNote } = getState().notes;\n\n        Swal.fire({\n            title:'Actualizando...',\n            text: 'Espere...',\n            allowOutsideClick:false,\n            didOpen: () => {\n                Swal.showLoading();\n            }\n        })\n\n        const fileUrl = await uploadFile(file);\n        activeNote.url = fileUrl.url;\n\n        dispatch(startSaveNote(activeNote))\n\n        Swal.close();\n\n    }\n}\n\n\nexport const startDelete = (id) => {\n    return async(dispatch, getState) => {\n        \n        const { uid } = getState().auth;\n    \n        const noteRef = doc(db, `${uid}/journal/notes/${id}`)\n        await deleteDoc(noteRef);\n \n        dispatch(deleteNote(id));\n    \n    }\n\n}\n\n\nexport const deleteNote = (id) => ({\n    type:types.notesDelete,\n    payload: id\n\n})\n\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n})","import { createUserWithEmailAndPassword, \n        getAuth, \n        signInWithEmailAndPassword, \n        signInWithPopup, \n        signOut, \n        updateProfile } from \"@firebase/auth\";\n\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\nimport { finishLoading, startLoading } from \"./ui\";\n\nimport Swal from 'sweetalert2'\nimport { noteLogout } from \"./notes\";\n\n\n\n//Accion Asincrona\n//Login con Email y Password\nexport const startLoginWithEmailPassword = (password, email) => {\n\n    return (dispatch) => {\n\n        const auth = getAuth();\n\n        dispatch(startLoading());\n\n        signInWithEmailAndPassword(auth, email, password )\n            .then(({ user }) => {\n                \n                dispatch( login(user.uid, user.displayName) )\n                dispatch(finishLoading());\n            })\n            .catch(e =>{ \n                console.log(e)\n                Swal.fire('Error', 'Usuario no encontrado' , 'error')\n                dispatch(finishLoading())\n            })\n        \n    }\n    \n}\n\n\n//Register con email y password\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    \n    return (dispatch) =>{\n\n        const auth = getAuth();\n\n        createUserWithEmailAndPassword(auth, email, password)\n            .then( async({user}) => {\n\n                await updateProfile(auth.currentUser, { displayName: name });\n\n                dispatch( login( user.uid, user.displayName ) )\n            })\n            .catch(e =>{  \n                Swal.fire('Error', e.message , 'error')\n                console.log(e)\n            } )\n\n    }\n}\n\n\n\n//Login con Google\nexport const startLoginWithGoogle = () => { \n\n    return (dispatch) =>{\n\n        const auth = getAuth();\n\n        signInWithPopup(auth ,googleAuthProvider)\n            .then( ({user}) => {\n                dispatch( login( user.uid, user.displayName ) )\n            })\n    }\n}\n\n\n//si solo devuelvo un objeto puedo encerrarlo entre parentesis envez de usar return\nexport const login = (uid, displayName) =>({\n\n    type: types.login,\n    payload:{\n        uid: uid,\n        displayName: displayName\n    }\n    \n})\n\n\nexport const startLogout = () => {\n    \n    return (dispatch) => {\n\n        const auth = getAuth();\n        signOut(auth);\n\n        dispatch(logout());\n\n        //Purgar las notas cuando se hace Logout\n        dispatch(noteLogout());\n    }\n}\n\nconst logout = () => ({\n\n    type: types.logout\n}) ","import { useState } from \"react\"\n\n\n\n//Al usarlo le paso como parametro al useForm un objeto donde voy a almacenarlo que por defecto esta vacio \nexport const useForm = ( initialState ={} ) => {\n    \n    //El estado\n    const [value, setValue] = useState(initialState)\n\n    //Reseteo\n    const reset = (newState = initialState) =>{\n        setValue(newState)\n    }\n\n    //Desestruyctura el \"e\" y le saca el target\n    const hadleInputChange = ({ target }) =>{\n\n        //El setValue guarda un nuevo objeto con el objeto anterior + el nuevo\n        setValue({\n            ...value,\n            [target.name]: target.value\n        });\n\n    }\n\n    //Returna el estado y la funcion \n    return [ value, hadleInputChange, reset]\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes';\nimport moment from 'moment'\n\nexport const NoteAppBar = () => {\n    \n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes)\n    const fecha = moment(active.date).format('MMM Do YY');\n\n    const handleSave = () => {\n        \n        dispatch(startSaveNote(active));\n        \n    }\n\n\n    const handlePicture = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n\n    const handleFileChange = ( { target } ) => {\n        const file = target.files;\n\n        if (file) {\n            dispatch(startUploading(file[0]))\n        }\n    }\n    \n    return (\n        <div className=\"notes__appbar\" >\n            <span>{fecha}</span>\n\n            <input \n                type=\"file\" \n                name=\"\" \n                id=\"fileSelector\" \n                style={{ display:'none' }} \n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\" \n                    onClick={ handlePicture }\n                > \n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\" \n                    onClick={ handleSave }\n                > \n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDelete } from '../../actions/notes'\nimport { useForm } from '../../hooks/useForm'\nimport { NoteAppBar } from './NoteAppBar'\n\nexport const NoteScreen = () => {\n    \n\n    const { active: note } = useSelector(state => state.notes)\n    const [formValue, hadleInputChange, reset] = useForm(note);\n    const { title, body, id } = formValue;\n\n    const activeId = useRef(note.id)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id\n        }\n        \n    }, [note, reset]);\n\n\n    useEffect(() => {\n        \n        dispatch(activeNote( formValue.id, { ...formValue }))\n        \n    }, [formValue, dispatch])\n\n\n    const handleDelete = () => {\n        dispatch(startDelete(id))\n    }\n    \n    return (\n        <div className=\"notes__main-content\" >\n            \n            <NoteAppBar/>\n\n            <div className=\"notes__content\" >\n                <input \n                    type=\"text\"\n                    placeholder=\"Titulo\"\n                    className=\"notes__title-input\" \n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ hadleInputChange }\n                />\n\n                <textarea \n                    placeholder=\"Que paso hoy?\"\n                    className=\"notes__textarea\"\n                    autoComplete=\"off\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ hadleInputChange }\n                ></textarea>\n            </div>\n            {\n                note.url &&\n                (<div className=\"notes__image\">\n                    <img \n                        src={ note.url }\n                        alt=\"mandarina\" \n                    />\n                </div>)\n            }\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Borrar\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSeleted = () => {\n    return (\n        <div className=\"nothing__main-content\" >\n            <p>\n                Selecciona\n                <br />\n                o crea una entrada!!\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\" ></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment'\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntry = ({ id, title, body, date, url }) => {\n    \n    const noteDate = moment(date);\n\n    const dispatch = useDispatch();\n\n    const thisEntry = {\n        title,\n        body,\n        date,\n        url\n    }\n\n    const handleEntryClick = () => {\n        \n        dispatch( activeNote(id, thisEntry) )\n    }\n\n    \n    return (\n        <div \n            className=\"journal__entry\" \n            onClick={ handleEntryClick }\n        >\n            \n            {\n                url &&\n                    (<div \n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url(${ url })`\n                        }}\n                    >\n                    </div>)\n            }\n            \n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\" >\n                    {body}\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEtries = () => {\n    \n    const { notes } = useSelector(state => state.notes)\n    \n\n    return (\n        <div className=\"journal__entries\" >\n            {\n                notes.map(note =>(\n                    \n                    <JournalEntry \n                        key={ note.id }\n                        { ...note } \n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEtries } from './JournalEtries'\nimport { useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { useSelector } from 'react-redux'\nimport { startNewNote } from '../../actions/notes'\n\nexport const Sidebar = () => {\n    \n    const dispatch = useDispatch()\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n    \n    const { name } = useSelector(state => state.auth)\n\n    return (\n        <aside className=\"journal__sidebar\" >\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\" >\n                    <i className=\"far fa-moon\" ></i>\n                    <span> { name } </span>\n                </h3> \n                <button \n                    className=\"btn\"\n                    onClick= { handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\" ></i>\n                <p className=\"mt-5\" >New Entry</p>\n            </div>\n\n            <JournalEtries/>\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSeleted } from './NothingSeleted'\n\nimport { Sidebar } from './Sidebar'\n\nexport const JouernalScreen = () => {\n    \n    const { active } = useSelector(state => state.notes)\n    \n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar/>\n\n            <main>\n                \n                {\n                    (active)\n                        ? ( <NoteScreen/> )\n                        : ( <NothingSeleted /> )\n                }\n\n\n                \n            </main>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { startLoginWithEmailPassword, startLoginWithGoogle } from '../../actions/auth'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nexport const LoginScreen = () => {\n\n  //Para hacer un dispatch de una action que afecta al Store\n  const dispatch = useDispatch()\n  \n  const { loading } = useSelector(state => state.ui);\n  \n  \n  const [ formValue, handleInputChange ] = useForm({\n    email:'',\n    password: ''\n\n  });\n\n  const { email, password } = formValue;\n  \n  \n  const handleGoogleLogin = () => {\n    \n    dispatch( startLoginWithGoogle() );\n  }\n\n\n  const handleLogin = (e) =>{\n\n    e.preventDefault();\n\n    dispatch( startLoginWithEmailPassword(password, email) );\n  }\n\n  return (\n      <div>\n        <h3 className=\"auth__title mb-5\">Login</h3>\n\n        <form onSubmit={ handleLogin }>\n          <input \n            type=\"email\" \n            name=\"email\" \n            value={ email }\n            onChange= { handleInputChange }\n            placeholder=\"Email\"\n            className=\"auth__input\"\n            autoComplete=\"off\" \n            />\n\n          <input \n            type=\"password\" \n            name=\"password\" \n            value={ password }\n            onChange= { handleInputChange }\n            placeholder=\"Password\" \n            className=\"auth__input\"\n            />\n\n            <button\n                disabled={ loading }\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n            >\n                Login\n            </button>\n\n          <div className=\"auth__social-networks\">\n            <p>Login with social networks</p>\n            <div className=\"google-btn\">\n              <div className=\"google-icon-wrapper\">\n                <img\n                  className=\"google-icon\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                  alt=\"google button\"\n                />\n              </div>\n              <p \n                className=\"btn-text\"\n                onClick={ handleGoogleLogin }\n              >\n                <b>Sign in with google</b>\n              </p>\n            </div>\n          </div>\n            <Link \n                to=\"/auth/register\"\n                className=\"links\"\n            >\n            Create new account\n          </Link>\n        </form>\n      </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n    \n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector(state => state.ui);\n\n    \n    const [ inputValue, handleInputChange ] = useForm({\n        name:'',\n        email:'',\n        password: null,\n        password2:null\n    });\n\n    const { name, email, password, password2 } = inputValue;\n\n    const handleRegister = (e) => {\n\n        e.preventDefault();\n\n        if ( isFormValid() ) {\n            \n            dispatch( startRegisterWithEmailPasswordName(email, password, name) )\n\n        }\n    }\n\n    const isFormValid = () => {\n        \n        if (name.trim().length === 0) {\n            \n            dispatch(setError(\"Ingrese un Nombre\"));\n            return false\n        \n        }else if ( !validator.isEmail( email )) {\n            \n            dispatch(setError('Email no valido'));\n            return false\n        \n        }else if (password !== password2 || password.length < 5 ) {\n\n            dispatch(setError('Contraseña no coincide o tiene menos de 6 caracteres'));\n            return false\n        }       \n        \n        dispatch(removeError());\n        return true\n    }\n    \n    return (\n        <div>\n            <h3 className=\"auth__title mb-5\">Register</h3>\n\n            {\n                msgError && (\n\n                    <div className=\"auth__alert-error\">\n                        { msgError }\n                    </div>\n                )\n            }\n\n\n            <form onSubmit={ handleRegister }>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    name=\"password2\"\n                    placeholder=\"Confirm Password\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n                <Link\n                    to=\"/auth/login\"\n                    className=\"links \"\n                >\n                    Already registered?\n                </Link>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { \n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\" >\n                <Switch>\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n\n                    <Redirect to='/auth/login' />\n                </Switch>\n\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\n\nexport const PrivateRoute = ({\n    loggedIn,\n    component: Component,\n    ...rest }) => {\n    \n    return (\n        \n        <Route \n            { ...rest }\n            component={ (props) => (\n                (loggedIn)\n                    ? (<Component { ...props } />)\n                    : (<Redirect to=\"/auth/login\" />)\n            )}\n        />\n    \n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\n\nexport const PublicRoute = ({\n    loggedIn,\n    component: Component,\n    ...rest }) => {\n    \n    return (\n        \n        <Route \n            { ...rest }\n            component={ (props) => (\n                (loggedIn)\n                    ? (<Redirect to=\"/\" />)\n                    : (<Component { ...props } />)\n            )}\n        />\n    \n    )\n}\n\n","import { getAuth, onAuthStateChanged } from \"@firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { login } from \"../actions/auth\";\nimport { startLoadingNotes } from \"../actions/notes\";\nimport { JouernalScreen } from \"../components/journal/JouernalScreen\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n    \n    const dispatch = useDispatch();\n\n    const [checkin, setCheckin] = useState(true);\n\n    const [loggedIn, setLoggedIn] = useState(false)\n    \n    \n    useEffect(() => {\n        \n        const auth = getAuth();\n\n        onAuthStateChanged(auth, async(user)=>{\n\n            if (user?.uid) {\n                //Login en el store\n                dispatch( login(user.uid, user.displayName) )\n                setLoggedIn(true)\n\n                //Notas en el Store\n                dispatch(startLoadingNotes(user.uid))\n            \n            }else {\n                \n                setLoggedIn(false)\n            }\n\n\n            setCheckin(false)\n\n        })\n        \n    }, [dispatch])\n\n    if ( checkin ) {\n        return (\n            <h1>...Espere</h1>\n        ) \n    }\n    \n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\" \n                        component={ AuthRouter } \n                        loggedIn= { loggedIn }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ JouernalScreen } \n                        loggedIn= { loggedIn }\n                    />\n\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n                \n        </Router>\n    );\n};\n","/*\n    {\n        note: [],\n        active:null,\n        active:{\n            id:380f80d8093809rfj,\n            title: '',\n            body: '',\n            imageUrl: '',\n            date:12/31/41\n        }\n    }\n*/\n\nimport { types } from \"../types/types\"\n\n\nconst initialState = {\n    notes:[],\n    active: null\n}\n\n\nexport const noteReducer = (state = initialState , action) => {\n\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active:{\n                    ...action.payload\n                }\n            }\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n\n        case types.notesUpdated: \n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n        \n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            }\n        \n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                notes: [],\n                active: null\n            }\n\n        default:\n            return state\n    }\n\n}","import { types } from \"../types/types\";\n\n\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            \n            return {\n                ...state,\n                msgError: action.payload\n            }\n        \n        case types.uiRemoveError:\n            return{\n                ...state,\n                msgError: null\n            }\n        \n        case types.uiStartLoading:\n            return {\n                ...state, \n                loading: true\n            }\n        \n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n            \n        default:\n            return state\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { noteReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\n//No se puede mandar mas de un Reducer por defecto entonces uso el combineReducers\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui:  uiReducer,\n    notes: noteReducer\n})\n\n\n//Para poder usar Middlewares y la extencion de Redux para navegaro\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\n//Despues lo importo en el punto mas alto de app\n//Thunk = configuracion para trabajar acciones asincronas \nexport const store = createStore(\n        reducers,\n        composeEnhancers(\n            applyMiddleware(thunk)\n        )    \n    ); ","\n\n//Cuando no este autenticado el state va a estar vacio\n/* \n    {\n        uid: \"1646846468sda\",\n        name: \"Santiago\"\n    }\n*/\n\nimport { types } from \"../types/types\";\n\n\nexport const authReducer = (state = {}, action) =>{\n\n    switch ( action.type ) {\n        \n        case types.login:\n            return{\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        \n        case types.logout:\n            return{ }\n        \n        default:\n            return state; \n    }\n}","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routers/AppRouter'\nimport { store } from './store/store'\n\nexport const JournalApp = () => {\n    return (\n\n        //high order component con el el Store\n\n        <Provider store={ store } >\n            \n            <AppRouter />\n            \n        </Provider>\n\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  \n    <JournalApp />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}